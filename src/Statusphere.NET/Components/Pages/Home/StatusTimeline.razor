@using Statusphere.NET.Database

<div class="status-timeline">
    @foreach (var status in Statuses.OrderByDescending(x => x.CreatedAt))
    {
        <div class="status-line">
            <div>
                <div class="status">@status.Value</div>
            </div>
            <div class="desc">
                <a class="author" href="https://bsky.app/profile/@status.AuthorDid" target="_blank">
                    @DidToHandleMap.GetValueOrDefault(status.AuthorDid, "Someone")
                </a>
                @if (status.CreatedAt.Date == DateTime.Today)
                {
                    <text> is feeling @status.Value today</text>
                }
                else
                {
                    <text> was feeling @status.Value on @status.CreatedAt</text>
                }
            </div>
        </div>
    }
</div>

@code {
    [Inject] 
    private DidClient DidClient { get; set; } = null!;
    
    [Parameter, EditorRequired]
    public required List<Status> Statuses { get; set; }
    
    private Dictionary<string, string> DidToHandleMap { get; set; } = [];

    protected override async Task OnParametersSetAsync()
    {
        foreach (var did in Statuses.Select(x => x.AuthorDid).Distinct())
        {
            if (DidToHandleMap.ContainsKey(did))
                continue;
            
            var didDocument = await DidClient.GetDidDocument(did);
            DidToHandleMap.Add(did, didDocument.AlsoKnownAs[0].Replace("at://", "@"));
        }
    }
}